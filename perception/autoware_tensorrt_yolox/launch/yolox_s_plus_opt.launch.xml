<?xml version="1.0"?>
<launch>
  <!-- cspell: ignore semseg, finetune  -->
  <arg name="camera_id" default="0" description="camera id, used for remapping topics"/>
  <arg name="image_topic_name" default="image_raw" description="options `image_raw`, `image_rect_color`"/>
  <arg name="yolox_node_name" default="tensorrt_yolox$(var camera_id)"/>
  <arg name="image_transport_decompressor_node_name" default="image_transport_decompressor_node$(var camera_id)"/>

  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>

  <arg name="input/image" default="/sensing/camera/camera0/image_rect_color"/>
  <arg name="output/objects" default="/perception/object_recognition/detection/rois0"/>
  <arg name="output/mask" default="/perception/object_recognition/detection/mask0"/>
  <arg
    name="model_name"
    default="yolox-sPlus-T4-960x960-debris"
    description="options `yolox-sPlus-T4-960x960-pseudo-finetune` if only detection is needed, `yolox-sPlus-opt-pseudoV2-T4-960x960-T4-seg16cls` if sematic segmentation is also needed"
  />
  <arg name="data_path" default="/opt/autoware/mlmodels/yolox" description="packages data and artifacts directory path"/>
  <arg name="input/image" default="/sensing/camera/camera$(var camera_id)/$(var image_topic_name)"/>
  <arg name="output/objects" default="/perception/object_recognition/detection/rois$(var camera_id)"/>
  <arg name="output/mask" default="/perception/object_recognition/detection/mask$(var camera_id)"/>
  <arg name="use_bytetrack" default="false" description="use bytetrack for tracking, if false, only detection is performed"/>
  <let name="yolox_output_objects" value="$(var output/objects)" unless="$(var use_bytetrack)"/>
  <let name="yolox_output_objects" value="/perception/object_recognition/detection/yolox/rois$(var camera_id)" if="$(var use_bytetrack)"/>
  <arg name="bytetrack_param_path" default="$(find-pkg-share autoware_bytetrack)/config/bytetrack.param.yaml"/>

  <arg name="yolox_param_path" default="$(find-pkg-share autoware_tensorrt_yolox)/config/yolox_s_plus_opt.param.yaml"/>
  <arg
    name="model_path"
    default="/opt/autoware/mlmodels/yolox/yolox-sPlus-T4-960x960-debris.onnx"
    description="options `yolox-sPlus-T4-960x960-pseudo-finetune.onnx` if only detection is needed, `yolox-sPlus-opt-pseudoV2-T4-960x960-T4-seg16cls.onnx` if sematic segmentation is also needed"
  />
  <arg name="label_path" default="/opt/autoware/mlmodels/yolox/label.txt" description="label path"/>
  <arg name="color_map_path" default="/opt/autoware/mlmodels/yolox/semseg_color_map.csv" description="color map path"/>

  <arg name="use_decompress" default="true" description="use image decompress"/>
  <arg name="build_only" default="false" description="exit after trt engine is built"/>

  <arg name="decompress_param_path" default="$(find-pkg-share autoware_image_transport_decompressor)/config/image_transport_decompressor.param.yaml"/>
  <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="$(var image_transport_decompressor_node_name)" if="$(var use_decompress)">
    <remap from="~/input/compressed_image" to="$(var input/image)/compressed"/>
    <remap from="~/output/raw_image" to="$(var input/image)"/>
    <param from="$(var decompress_param_path)"/>
  </node>

  <!-- yolox -->
  <node pkg="autoware_tensorrt_yolox" exec="autoware_tensorrt_yolox_node_exe" name="$(var yolox_node_name)" output="screen">
    <remap from="~/in/image" to="$(var input/image)"/>
    <remap from="~/out/objects" to="$(var yolox_output_objects)"/>
    <remap from="~/out/mask" to="$(var output/mask)"/>
    <param from="$(var yolox_param_path)" allow_substs="true"/>
    <param name="model_path" value="$(var model_path)"/>
    <param name="label_path" value="$(var label_path)"/>
    <param name="color_map_path" value="$(var color_map_path)"/>
    <param name="build_only" value="$(var build_only)"/>
  </node>

  <!-- bytetrack -->
  <group if="$(var use_bytetrack)">
    <node pkg="autoware_bytetrack" exec="bytetrack_node_exe" name="bytetrack_node$(var camera_id)" output="screen">
      <remap from="~/in/rect" to="$(var yolox_output_objects)"/>
      <remap from="~/out/objects" to="$(var output/objects)"/>
      <param from="$(var bytetrack_param_path)"/>
    </node>
  </group>
</launch>
