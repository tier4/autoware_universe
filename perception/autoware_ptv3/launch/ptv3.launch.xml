<?xml version="1.0"?>
<launch>
  <arg name="input/pointcloud" default="/sensing/lidar/concatenated/pointcloud"/>
  <arg name="segmented/pointcloud" default="/sensing/lidar/concatenated/segmented"/>
  <arg name="ground_segmented/pointcloud" default="/sensing/lidar/concatenated/no_ground"/>
  <arg name="probs/pointcloud" default="/sensing/lidar/concatenated/probs"/>

  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="model_name" default="ptv3"/>
  <arg name="model_path" default="$(var data_path)/ptv3"/>
  <arg name="model_param_path" default="$(find-pkg-share autoware_ptv3)/config/$(var model_name).param.yaml"/>
  <arg name="ml_package_param_path" default="$(var model_path)/ml_package_$(var model_name).param.yaml"/>
  <arg name="class_remapper_param_path" default="$(var model_path)/detection_class_remapper.param.yaml"/>
  <arg name="build_only" default="false" description="shutdown node after TensorRT engine file is built"/>
  <arg name="log_level" default="info"/>

  <arg name="use_pointcloud_container" default="false" description="use pointcloud_container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container" description="pointcloud_container name"/>

  <!-- cSpell:ignore probs -->
  <group if="$(var use_pointcloud_container)">
    <load_composable_node target="$(var pointcloud_container_name)">
      <composable_node pkg="autoware_ptv3" plugin="autoware::ptv3::PTv3Node" name="ptv3">
        <remap from="~/input/pointcloud" to="$(var input/pointcloud)"/>
        <remap from="~/input/pointcloud/cuda" to="$(var input/pointcloud)/cuda"/>
        <remap from="~/output/segmented/pointcloud" to="$(var segmented/pointcloud)"/>
        <remap from="~/output/segmented/pointcloud/cuda" to="$(var segmented/pointcloud)/cuda"/>
        <remap from="~/output/ground_segmented/pointcloud" to="$(var ground_segmented/pointcloud)"/>
        <remap from="~/output/ground_segmented/pointcloud/cuda" to="$(var ground_segmented/pointcloud)/cuda"/>
        <remap from="~/output/probs/pointcloud" to="$(var probs/pointcloud)"/>
        <remap from="~/output/probs/pointcloud/cuda" to="$(var probs/pointcloud)/cuda"/>
        <param from="$(var model_param_path)" allow_substs="true"/>
        <param from="$(var ml_package_param_path)" allow_substs="true"/>

        <!-- This parameter shall NOT be included in param file. See also: https://github.com/autowarefoundation/autoware.universe/pull/6167 -->
        <param name="build_only" value="$(var build_only)"/>
      </composable_node>
    </load_composable_node>
  </group>
  <group unless="$(var use_pointcloud_container)">
    <node pkg="autoware_ptv3" exec="autoware_ptv3_node" name="ptv3" output="screen" args="--ros-args --log-level $(var log_level)">
      <remap from="~/input/pointcloud" to="$(var input/pointcloud)"/>
      <remap from="~/input/pointcloud/cuda" to="$(var input/pointcloud)/cuda"/>
      <remap from="~/output/segmented/pointcloud" to="$(var segmented/pointcloud)"/>
      <remap from="~/output/segmented/pointcloud/cuda" to="$(var segmented/pointcloud)/cuda"/>
      <remap from="~/output/ground_segmented/pointcloud" to="$(var ground_segmented/pointcloud)"/>
      <remap from="~/output/ground_segmented/pointcloud/cuda" to="$(var ground_segmented/pointcloud)/cuda"/>
      <remap from="~/output/probs/pointcloud" to="$(var probs/pointcloud)"/>
      <remap from="~/output/probs/pointcloud/cuda" to="$(var probs/pointcloud)/cuda"/>

      <param from="$(var model_param_path)" allow_substs="true"/>
      <param from="$(var ml_package_param_path)" allow_substs="true"/>

      <!-- This parameter shall NOT be included in param file. See also: https://github.com/autowarefoundation/autoware.universe/pull/6167 -->
      <param name="build_only" value="$(var build_only)"/>
    </node>
  </group>
</launch>
