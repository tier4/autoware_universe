name: AI PR Comment Analysis

on:
  issue_comment:
    types: [created]

jobs:
  analyze-comment:
    # Only run on PR comments that contain the trigger phrase
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '@co-pilot-auto') }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Call PR analysis workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const commentBody = context.payload.comment.body;
            const commenter = context.payload.comment.user.login;
            const prNumber = context.payload.issue.number;
            const runId = context.runId;
            const workflowRunUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${runId}`;

            // Post acknowledgment comment with workflow run link
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@${commenter} ðŸ”„ Co-Pilot-Auto Client Triggered... Please wait for the results.\n\nView Client trigger workflow progress: [GitHub Actions Run](${workflowRunUrl})`
            });

            // Call the reusable workflow in the analyzer repository
            await github.rest.actions.createWorkflowDispatch({
              owner: 'tier4',
              repo: 'llm_pr_analyzer',
              workflow_id: 'co-pilot-auto-server.yml', // The filename of the reusable workflow
              ref: 'pilot-auto-branch', // The branch where the workflow is defined
              inputs: {
                repo: `${context.repo.owner}/${context.repo.repo}`,
                pr_number: `${prNumber}`,
                comment_body: commentBody,
                commenter: commenter,
              }
            });
