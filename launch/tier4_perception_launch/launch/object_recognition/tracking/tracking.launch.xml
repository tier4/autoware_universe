<?xml version="1.0"?>
<launch>
  <!-- Current namespace -->
  <let name="ns" value="/perception/object_recognition/tracking"/>

  <!-- Radar Tracking and Merger parameters -->
  <arg name="object_recognition_tracking_radar_tracked_object_sorter_param_path" description="param file for radar distance and velocity filters"/>
  <arg name="object_recognition_tracking_radar_tracked_object_lanelet_filter_param_path" description="param file for radar lanelet filter"/>
  <arg name="object_recognition_tracking_object_merger_data_association_matrix_param_path" description="association param file for radar and lidar object merger"/>
  <arg name="object_recognition_tracking_object_merger_node_param_path" description="node param file for radar and lidar object merger"/>

  <!-- Pipeline junctions -->
  <arg name="mode" default="lidar">
    <choice value="camera"/>
    <choice value="camera_lidar_radar_fusion"/>
    <choice value="camera_lidar_fusion"/>
    <choice value="lidar_radar_fusion"/>
    <choice value="lidar"/>
    <choice value="radar"/>
  </arg>

  <arg name="use_radar_tracking_fusion" default="false" description="use radar tracking fusion"/>
  <let name="use_radar_tracking_fusion" value="false" if="$(eval '&quot;$(var mode)&quot;!=&quot;camera_lidar_radar_fusion&quot;')"/>
  <arg name="use_multi_channel_tracker_merger"/>
  <arg name="use_validator" description="use obstacle_pointcloud based validator"/>
  <arg name="use_short_range_detection"/>

  <!-- External interface -->
  <arg name="lidar_detection_model_type" default="centerpoint"/>
  <arg name="input/merged_detection/channel" default="detected_objects"/>
  <arg name="input/merged_detection/objects" default="/perception/object_recognition/detection/objects"/>
  <arg name="input/lidar_dnn/channel" default="lidar_$(var lidar_detection_model_type)"/>
  <arg name="input/lidar_dnn/objects" default="/perception/object_recognition/detection/$(var lidar_detection_model_type)/objects"/>
  <arg name="input/lidar_dnn_validated/objects" default="/perception/object_recognition/detection/$(var lidar_detection_model_type)/validation/objects"/>
  <arg name="input/lidar_dnn_short_range/channel" default="lidar_$(var lidar_short_range_detection_model_type)"/>
  <arg name="input/lidar_dnn_short_range/objects" default="/perception/object_recognition/detection/$(var lidar_short_range_detection_model_type)/objects"/>
  <arg name="input/camera_lidar_rule_detector/channel" default="camera_lidar_fusion"/>
  <arg name="input/camera_lidar_rule_detector/objects" default="/perception/object_recognition/detection/clustering/camera_lidar_fusion/objects"/>
  <arg name="input/irregular_object_detector/channel" default="camera_lidar_fusion_irregular"/>
  <arg name="input/irregular_object_detector/objects" default="/perception/object_recognition/detection/irregular_object/objects"/>
  <arg name="input/tracker_based_detector/channel" default="detection_by_tracker"/>
  <arg name="input/tracker_based_detector/objects" default="/perception/object_recognition/detection/detection_by_tracker/objects"/>
  <arg name="input/radar/channel" default="radar"/>
  <arg name="input/radar/far_objects" default="/perception/object_recognition/detection/radar/far_objects"/>
  <arg name="input/radar/objects" default="/perception/object_recognition/detection/radar/objects"/>
  <arg name="input/radar/tracked_objects" default="/sensing/radar/tracked_objects"/>

  <arg name="output/objects" default="$(var ns)/objects"/>

  <group unless="$(var use_multi_channel_tracker_merger)">
    <!-- Internal interface -->
    <let name="radar_tracked_object_sorter/input/objects" value="$(var input/radar/tracked_objects)"/>
    <let name="radar_tracked_object_sorter/output/objects" value="$(var ns)/radar/sorted_tracked_objects"/>

    <let name="radar_tracked_object_lanelet_filter/input/object" value="$(var radar_tracked_object_sorter/output/objects)"/>
    <let name="radar_tracked_object_lanelet_filter/output/object" value="$(var ns)/radar/tracked_objects"/>

    <let name="multi_object_tracker/output/objects" value="$(var output/objects)" unless="$(var use_radar_tracking_fusion)"/>
    <let name="multi_object_tracker/output/objects" value="$(var ns)/near_objects" if="$(var use_radar_tracking_fusion)"/>

    <let name="tracker_merger/input/main_objects" value="$(var multi_object_tracker/output/objects)"/>
    <let name="tracker_merger/input/sub_objects" value="$(var radar_tracked_object_lanelet_filter/output/object)"/>
    <let name="tracker_merger/output/objects" value="$(var output/objects)"/>

    <!-- Multi object tracking -->
    <include file="$(find-pkg-share autoware_multi_object_tracker)/launch/multi_object_tracker.launch.xml">
      <arg name="input/detection01/objects" value="$(var input/merged_detection/objects)"/>
      <arg name="input/detection01/channel" value="$(var input/merged_detection/channel)"/>
      <arg name="output/objects" value="$(var multi_object_tracker/output/objects)"/>
      <arg name="data_association_matrix_path" value="$(var object_recognition_tracking_multi_object_tracker_data_association_matrix_param_path)"/>
      <arg name="input_channels_path" value="$(var object_recognition_tracking_multi_object_tracker_input_channels_param_path)"/>
      <arg name="tracker_setting_path" value="$(var object_recognition_tracking_multi_object_tracker_node_param_path)"/>
    </include>

    <!-- Run with tracking merger to add far radar information -->
    <group if="$(var use_radar_tracking_fusion)">
      <!-- radar tracked object filters -->
      <include file="$(find-pkg-share autoware_object_sorter)/launch/tracked_object_sorter.launch.xml">
        <arg name="input/objects" value="$(var radar_tracked_object_sorter/input/objects)"/>
        <arg name="output/objects" value="$(var radar_tracked_object_sorter/output/objects)"/>
        <arg name="param_path" value="$(var object_recognition_tracking_radar_tracked_object_sorter_param_path)"/>
      </include>

      <include file="$(find-pkg-share autoware_detected_object_validation)/launch/tracked_object_lanelet_filter.launch.xml">
        <arg name="input/object" value="$(var radar_tracked_object_lanelet_filter/input/object)"/>
        <arg name="output/object" value="$(var radar_tracked_object_lanelet_filter/output/object)"/>
        <arg name="filtering_range_param" value="$(var object_recognition_tracking_radar_tracked_object_lanelet_filter_param_path)"/>
      </include>

      <!-- tracking object merger to merge near objects and far objects -->
      <include file="$(find-pkg-share autoware_tracking_object_merger)/launch/decorative_tracker_merger.launch.xml">
        <arg name="node_name" value="decorative_tracker_merger"/>
        <arg name="input/main_object" value="$(var tracker_merger/input/main_objects)"/>
        <arg name="input/sub_object" value="$(var tracker_merger/input/sub_objects)"/>
        <arg name="output" value="$(var tracker_merger/output/objects)"/>
        <arg name="data_association_matrix_path" value="$(var object_recognition_tracking_object_merger_data_association_matrix_param_path)"/>
        <arg name="node_param_file_path" value="$(var object_recognition_tracking_object_merger_node_param_path)"/>
      </include>
    </group>
  </group>

  <!-- Object list for multi-channel tracker merger -->
  <group if="$(var use_multi_channel_tracker_merger)">
    <let name="input/detection01/channel" value="$(var input/lidar_dnn/channel)"/>
    <let name="input/detection01/objects" value="$(var input/lidar_dnn_validated/objects)" if="$(var use_validator)"/>
    <let name="input/detection01/objects" value="$(var input/lidar_dnn/objects)" unless="$(var use_validator)"/>

    <let name="input/detection02/channel" value="$(var input/lidar_dnn_short_range/channel)" if="$(var use_short_range_detection)"/>
    <let name="input/detection02/channel" value="none" unless="$(var use_short_range_detection)"/>
    <let name="input/detection02/objects" value="$(var input/lidar_dnn_short_range/objects)"/>

    <let name="input/detection03/channel" value="$(var input/camera_lidar_rule_detector/channel)"/>
    <let name="input/detection03/objects" value="$(var input/camera_lidar_rule_detector/objects)"/>

    <let name="input/detection04/channel" value="$(var input/irregular_object_detector/channel)"/>
    <let name="input/detection04/objects" value="$(var input/irregular_object_detector/objects)"/>

    <let name="input/detection05/channel" value="$(var input/tracker_based_detector/channel)"/>
    <let name="input/detection05/channel" value="none" unless="$(var use_detection_by_tracker)"/>
    <let name="input/detection05/objects" value="$(var input/tracker_based_detector/objects)"/>

    <let name="input/detection06/channel" value="$(var input/radar/channel)"/>
    <let name="input/detection06/objects" value="$(var input/radar/far_objects)"/>

    <!-- camera lidar -->
    <group scoped="false" if="$(eval '&quot;$(var mode)&quot;==&quot;camera_lidar_fusion&quot;')">
      <!-- radar far object is not used -->
      <let name="input/detection06/channel" value="none"/>
    </group>

    <!-- lidar radar -->
    <group scoped="false" if="$(eval '&quot;$(var mode)&quot;==&quot;lidar_radar_fusion&quot;')">
      <!-- camera lidar fusion is not used -->
      <let name="input/detection03/channel" value="none"/>
      <!-- irregular object detector is not used -->
      <let name="input/detection04/channel" value="none"/>
    </group>

    <!-- lidar -->
    <group scoped="false" if="$(eval '&quot;$(var mode)&quot;==&quot;lidar&quot;')">
      <!-- camera lidar detector is not used -->
      <let name="input/detection03/channel" value="none"/>
      <!-- irregular object detector is not used -->
      <let name="input/detection04/channel" value="none"/>
      <!-- radar far object is not used -->
      <let name="input/detection06/channel" value="none"/>
    </group>

    <!-- radar -->
    <group scoped="false" if="$(eval '&quot;$(var mode)&quot;==&quot;radar&quot;')">
      <!-- lidar dnn detection is not used -->
      <let name="input/detection01/channel" value="none"/>
      <!-- camera lidar fusion is not used -->
      <let name="input/detection03/channel" value="none"/>
      <!-- irregular object detector is not used -->
      <let name="input/detection04/channel" value="none"/>
      <!-- detection by tracker is not used -->
      <let name="input/detection05/channel" value="none"/>
      <!-- normal radar object to be used-->
      <let name="input/detection05/objects" value="$(var input/radar/objects)"/>
    </group>

    <!-- Multi object tracking -->
    <include file="$(find-pkg-share autoware_multi_object_tracker)/launch/multi_object_tracker.launch.xml">
      <arg name="input/detection01/objects" value="$(var input/detection01/objects)"/>
      <arg name="input/detection01/channel" value="$(var input/detection01/channel)"/>
      <arg name="input/detection02/objects" value="$(var input/detection02/objects)"/>
      <arg name="input/detection02/channel" value="$(var input/detection02/channel)"/>
      <arg name="input/detection03/objects" value="$(var input/detection03/objects)"/>
      <arg name="input/detection03/channel" value="$(var input/detection03/channel)"/>
      <arg name="input/detection04/objects" value="$(var input/detection04/objects)"/>
      <arg name="input/detection04/channel" value="$(var input/detection04/channel)"/>
      <arg name="input/detection05/objects" value="$(var input/detection05/objects)"/>
      <arg name="input/detection05/channel" value="$(var input/detection05/channel)"/>
      <arg name="input/detection06/objects" value="$(var input/detection06/objects)"/>
      <arg name="input/detection06/channel" value="$(var input/detection06/channel)"/>
      <arg name="output/objects" value="$(var output/objects)"/>
      <arg name="data_association_matrix_path" value="$(var object_recognition_tracking_multi_object_tracker_data_association_matrix_param_path)"/>
      <arg name="input_channels_path" value="$(var object_recognition_tracking_multi_object_tracker_input_channels_param_path)"/>
      <arg name="tracker_setting_path" value="$(var object_recognition_tracking_multi_object_tracker_node_param_path)"/>
    </include>
  </group>
</launch>
