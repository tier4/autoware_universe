<?xml version="1.0"?>
<launch>
  <group>
    <!-- add namespace -->
    <!-- cspell: ignore semseg, finetune  -->
    <arg name="input/image" default="/sensing/camera/camera6/image_raw"/>
    <arg name="yolox_detected_traffic/rois" default="/perception/traffic_light_recognition/camera6/detection/yolox/rois"/>
    <arg
      name="model_name"
      default="tlr_car_ped_yolox_s_960_960_batch_1"
      description="options `yolox-sPlus-T4-960x960-pseudo-finetune` if only detection is needed, `yolox-sPlus-opt-pseudoV2-T4-960x960-T4-seg16cls` if sematic segmentation is also needed"
    />
    <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
    <arg name="yolox_param_path" default="$(find-pkg-share autoware_tensorrt_yolox)/config/yolox_s_plus_opt.param.yaml"/>
    <arg name="use_decompress" default="true" description="use image decompress"/>
    <arg name="build_only" default="false" description="exit after trt engine is built"/>

    <arg name="param_file" default="$(find-pkg-share autoware_image_transport_decompressor)/config/image_transport_decompressor.param.yaml"/>
    <node pkg="autoware_image_transport_decompressor" exec="image_transport_decompressor_node" name="image_transport_decompressor_node" if="$(var use_decompress)">
      <remap from="~/input/compressed_image" to="$(var input/image)/compressed"/>
      <remap from="~/output/raw_image" to="$(var input/image)"/>
      <param from="$(var param_file)"/>
    </node>

    <node pkg="autoware_tensorrt_yolox" exec="autoware_tensorrt_yolox_node_exe" name="tensorrt_yolox" output="screen">
      <remap from="~/in/image" to="$(var input/image)"/>
      <remap from="~/out/objects" to="$(var yolox_detected_traffic/rois)"/>
      <param name="build_only" value="$(var build_only)"/>
      <param name="is_roi_overlap_segment" value="false"/>
      <param name="overlap_roi_score_threshold" value="0.3"/>
      <param name="is_publish_color_mask" value="false"/>
      <param name="roi_overlay_segment_label.UNKNOWN" value="false"/>
      <param name="roi_overlay_segment_label.CAR" value="false"/>
      <param name="roi_overlay_segment_label.TRUCK" value="false"/>
      <param name="roi_overlay_segment_label.BUS" value="false"/>
      <param name="roi_overlay_segment_label.MOTORCYCLE" value="false"/>
      <param name="roi_overlay_segment_label.BICYCLE" value="false"/>
      <param name="roi_overlay_segment_label.PEDESTRIAN" value="false"/>
      <param name="roi_overlay_segment_label.ANIMAL" value="false"/>
      <param name="model_path" value="$(var data_path)/traffic_light_fine_detector_new/$(var model_name).onnx"/>
      <param name="label_path" value="$(var data_path)/traffic_light_fine_detector_new/label.txt"/>
      <param name="color_map_path" value="$(var data_path)/traffic_light_fine_detector_new/semseg_color_map.csv"/>
      <param name="score_threshold" value="0.35"/>
      <param name="nms_threshold" value="0.7"/>
      <param name="precision" value="fp16"/>
      <param name="calibration_algorithm" value="Entropy"/>
      <param name="dla_core_id" value="-1"/>
      <param name="quantize_first_layer" value="false"/>
      <param name="quantize_last_layer" value="false"/>
      <param name="profile_per_layer" value="false"/>
      <param name="clip_value" value="6.0"/>
      <param name="preprocess_on_gpu" value="true"/>
      <param name="gpu_id" value="0"/>
      <param name="calibration_image_list_path" value=""/>
    </node>
    <arg name="input/detected_rois" default="input/detected_rois"/>
    <arg name="input/rough_rois" default="/perception/traffic_light_recognition/camera6/detection/rough/rois"/>
    <arg name="output/traffic_light_rois" default="/perception/traffic_light_recognition/camera6/detection/rois"/>
    <arg name="input/expect_rois" default="/perception/traffic_light_recognition/camera6/detection/expect/rois"/>
    <!-- Node -->
    <node pkg="autoware_traffic_light_selector" exec="traffic_light_selector_node" name="autoware_traffic_light_selector" output="screen">
      <remap from="input/detected_rois" to="$(var yolox_detected_traffic/rois)"/>
      <remap from="input/rough_rois" to="$(var input/rough_rois)"/>
      <remap from="input/expect_rois" to="$(var input/expect_rois)"/>
      <remap from="output/traffic_light_rois" to="$(var output/traffic_light_rois)"/>
      <param name="debug" value="true"/>
    </node>
  </group>
</launch>
