<launch>
  <arg name="enable_all_modules_auto_mode"/>
  <arg name="is_simulation"/>
  <arg name="input_objects_topic_name" default="/perception/object_recognition/objects"/>
  <arg name="input_pointcloud_topic_name" default="/perception/obstacle_segmentation/pointcloud"/>

  <!-- lane_driving scenario -->
  <group>
    <push-ros-namespace namespace="lane_driving"/>
    <!-- behavior planning module -->
    <group>
      <push-ros-namespace namespace="behavior_planning"/>
      <group>
        <include file="$(find-pkg-share tier4_planning_launch)/launch/scenario_planning/lane_driving/behavior_planning/behavior_planning.launch.xml">
          <arg name="container_type" value="component_container_mt"/>
          <arg name="enable_all_modules_auto_mode" value="$(var enable_all_modules_auto_mode)"/>
          <arg name="is_simulation" value="$(var is_simulation)"/>
          <!-- This condition should be true if run_out module is enabled and its detection method is Points -->
          <arg name="launch_compare_map_pipeline" value="false"/>
          <arg name="input_objects_topic_name" value="$(var input_objects_topic_name)"/>
          <arg name="input_pointcloud_topic_name" value="$(var input_pointcloud_topic_name)"/>
        </include>
      </group>
    </group>

    <!-- motion planning module -->
    <group>
      <push-ros-namespace namespace="motion_planning"/>
      <group>
        <include file="$(find-pkg-share tier4_planning_launch)/launch/scenario_planning/lane_driving/motion_planning/motion_planning.launch.xml">
          <arg name="container_type" value="component_container_mt"/>
          <arg name="input_objects_topic_name" value="$(var input_objects_topic_name)"/>
          <arg name="input_pointcloud_topic_name" value="$(var input_pointcloud_topic_name)"/>
        </include>
      </group>
    </group>
  </group>
</launch>
